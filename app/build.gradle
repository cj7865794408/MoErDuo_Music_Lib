apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'jar-gradle-plugin'
group = 'com.github.cj7865794408'
repositories {
    mavenCentral()
    jcenter()
    google()
    flatDir {
        dirs 'libs'
    }
}

android {
    signingConfigs {
        release {
            keyAlias 'musiclake'
            keyPassword '123123'
            storeFile file('../app/musiclake.jks')
            storePassword '123123'
        }
    }
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "com.cyll.musiclake"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 15
        versionName "4.1.3"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        android.compileOptions.sourceCompatibility 1.8
        android.compileOptions.targetCompatibility 1.8
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    buildTypes {
        release {
            minifyEnabled true
//            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.release
        }
    }
//    android.applicationVariants.all { variant ->
//        variant.outputs.all { output ->
//            def time = new Date().format("yyyy-MM-dd HHmmss", TimeZone.getTimeZone("GMT+08"))
//            //这里修改apk文件名
//            outputFileName = "app-music_lake-${variant.name}-v${defaultConfig.versionCode}-${defaultConfig.versionName}-${time}.apk"
//        }
//    }
    compileSdkVersion 27
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
//    api(name: 'musiclibrary-release', ext: 'aar')
    implementation project(':musiclibrary')
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

BuildJar {
    //输出目录
    outputFileDir = project.buildDir.path + "/jar"
    //输出原始jar包名
    outputFileName = "test.jar"
    //输出混淆jar包名
    outputProguardFileName = "test_proguard.jar"
    //混淆配置
    proguardConfigFile = "proguard-rules.pro"
    //是否需要默认的混淆配置proguard-android.txt
    needDefaultProguard = false
    applyMappingFile = "originMapping/mapping.txt"
    //不需要输出jar的jar包列表,如['baidu.jar','baidu1.jar'...]
    excludeJar = []
    //需要输出jar的包名列表,当此参数为空时，则默认全项目输出,支持多包,如 includePackage=['com/adison/testjarplugin/include','com/adison/testjarplugin/include1'...]
    includePackage = []
    //不需要输出jar的类名列表,如['baidu.calss','baidu1.class'...]
    excludeClass = []
    //不需要输出jar的包名列表,如 excludePackage=['com/adison/testjarplugin/exclude','com/adison/testjarplugin/exclude1'...]
    excludePackage = []
}
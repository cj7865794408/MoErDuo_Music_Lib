apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'com.github.dcendents.android-maven'
//文件顶部添加
apply plugin: 'maven-publish'

//apply plugin: 'kotlin-kapt'

group = 'com.github.cj7865794408'

repositories {
    mavenCentral()
    google()
    jcenter()
    flatDir {
        dirs 'libs'
    }
}

android {

    buildToolsVersion "27.0.3"
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 15
        versionName "4.1.3"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        //添加如下配置就OK了
        javaCompileOptions {
            annotationProcessorOptions
                    {
                        includeCompileClasspath = true
                    }
        }
        android.compileOptions.sourceCompatibility 1.8
        android.compileOptions.targetCompatibility 1.8
        ndk {
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    lintOptions {
        abortOnError false
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    compileSdkVersion 27
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }

}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    api 'com.android.support.constraint:constraint-layout:1.1.2'
    api "com.android.support:design:$support_version"
    api "com.android.support:appcompat-v7:$support_version"
    api "com.android.support:palette-v7:$support_version"
    api "com.android.support:cardview-v7:$support_version"
    api "com.android.support:recyclerview-v7:$support_version"
    api "com.android.support:support-v4:$support_version"
    api 'com.jcodecraeer:xrecyclerview:1.2.7'
    api 'com.getbase:floatingactionbutton:1.10.1'
    api 'com.android.support:multidex:1.0.2'

    //   api  'com.github.clans:fab:1.6.4'
    api 'de.hdodenhof:circleimageview:2.2.0'
    api 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.34'

    //RxJava and RxAndroid
    api 'io.reactivex.rxjava2:rxandroid:2.0.2'
    api 'io.reactivex.rxjava2:rxjava:2.1.17'
    api 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.1'
    api "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    api "com.squareup.retrofit2:retrofit:$retrofit_version"
    api "com.squareup.retrofit2:converter-gson:$retrofit_version"
    api 'com.github.wendux:DSBridge-Android:master-SNAPSHOT'
    api 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'
    api 'net.steamcrafted:materialiconlib:1.1.5'
    api 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    //    api ("com.jakewharton:butterknife-compiler:8.8.1@aar")  { transitive = true }
    api 'com.afollestad.material-dialogs:core:0.9.5.0'
    api 'com.afollestad.material-dialogs:commons:0.9.5.0'
    api 'com.github.bumptech.glide:glide:4.7.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'

    //    api ("com.github.bumptech.glide:glide:4.7.1@aar")  { transitive = true }

    //    kapt 'com.github.bumptech.glide:compiler:4.7.1'
    api 'com.sothree.slidinguppanel:library:3.4.0'
    api 'com.liulishuo.filedownloader:library:1.7.4'
    api 'com.github.florent37:shapeofview:1.0.4'
    api 'com.github.rtugeek:ColorSeekBar:1.6.2'
    api 'com.just.agentweb:agentweb:4.0.2'
    api 'com.blankj:utilcode:1.15.1'

    //    api  'com.tencent.bugly:crashreport_upgrade:1.3.5'

    //    api  'com.tencent.bugly:nativecrashreport:3.3.1'
    api 'com.jaeger.statusbaruitl:library:1.3.5'
    api 'org.litepal.android:core:2.0.0'

    //dagger2
    api 'com.google.dagger:dagger:2.11'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.11'

    //    api ("com.google.dagger:dagger-compiler:2.11@aar")  { transitive = true }
    api 'com.google.android:flexbox:1.0.0'

    //    api  'com.hyman:flowlayout-lib:1.1.2'

    // Appcompat-v7 (only Anko Commons)
    api "org.jetbrains.anko:anko-appcompat-v7-commons:$anko_version"
    api 'com.amitshekhar.android:debug-db:1.0.3'
    api 'com.devbrackets.android:exomedia:4.2.1'

    //Eventbus
    api 'org.greenrobot:eventbus:3.1.1'
    api 'com.danikula:videocache:2.7.1'
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    api 'com.squareup.okhttp3:okhttp:3.11.0'
    api 'com.google.code.gson:gson:2.8.5'
    api files('libs/jaudiotagger-2.2.4-SNAPSHOT.jar')
    api files('libs/commons-codec-1.6.jar')
}

//文件底部添加

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

//publishing {
//    publications {
//        aar(MavenPublication) {
//            //记住一下规则,等会导入时注意, 举例compile 'com.dz.bleota:bleota:1.0.0'
//            groupId 'com.cyl.musiclake'//包名
//            artifactId 'xiaojia'
//            version '1.0.2'//版本
//            // Tell maven to prepare the generated "*.aar" file for publishing
//            artifact(sourceJar)
//            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
////同时记录该依赖库所依赖的其他远程依赖
//            pom.withXml {
//                def dependenciesNode = asNode().appendNode('dependencies')
//                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
//                configurations.annotationProcessor.allDependencies.each {
//                    if (it.group != null && (it.name != null || "unspecified".equals(it.name)) && it.version != null) {
//                        def dependencyNode = dependenciesNode.appendNode('dependency')
//                        dependencyNode.appendNode('groupId', it.group)
//                        dependencyNode.appendNode('artifactId', it.name)
//                        dependencyNode.appendNode('version', it.version)
//                    }
//                }
//                configurations.api.allDependencies.each {
//                    if (it.group != null && (it.name != null || "unspecified".equals(it.name)) && it.version != null) {
//                        def dependencyNode = dependenciesNode.appendNode('dependency')
//                        dependencyNode.appendNode('groupId', it.group)
//                        dependencyNode.appendNode('artifactId', it.name)
//                        dependencyNode.appendNode('version', it.version)
//                    }
//                }
//
//            }
//        }
//    }
//    repositories {
//        maven {
//            //仓库存放在项目根目录
//            url("file://" + project.rootDir.absolutePath + "/repository")
//        }
//    }
//}
//uploadArchives {
//    repositories {
//        mavenDeployer {
//            pom.groupId = "com.cyl.musiclake"//包名
//            pom.artifactId = "xiaojia-release"
//            pom.version = "1.0.0"
//            repository(url: "https://maven.aliyun.com/repository/jcenter")
//        }
//    }
//}
//kapt {
//    generateStubs = true
//}